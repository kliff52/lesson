#1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт
#проверки типа данных каждого элемента. Использовать функцию type() для проверки
#типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
# data_list = ['Text', int('1'), '123', 'privet', 0.5]
# b = len(data_list)
# a = 0
# while a < b:
#     print(type(data_list[a]))
#     a += 1
#2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний
# сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().
# data_list1 = list(input(" Vvedite spisok znacheniy bez probela - "))
# lenge = (len(data_list1))
# if lenge % 2 == 0:
#     j = 0
#     for i in range(int(lenge / 2)):
#         data_list1[j], data_list1[j + 1] = data_list1[j + 1], data_list1[j]
#         j += 2
#
#     print(data_list1)
# else:
#     j = 0
#     for i in range(int(lenge / 2)):
#         data_list1[j], data_list1[j + 1] = data_list1[j + 1], data_list1[j]
#         j += 2
#
#     print(data_list1)

# 3 Пользователь вводит месяц в виде целого числа от 1 до 12.
#Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
#Напишите решения через list и через dict
# my_list = ['Зима','Весна','Лето','Осень']
# my_dict = { 12 : 'Зима',
#             1 : 'Зима',
#             2 : 'Зима',
#             3 : 'Весна',
#             4 : 'Весна',
#             5 : 'Весна',
#             6 : 'Лето',
#             7 : 'Лето',
#             8 : 'Лето',
#             9 : 'Осень',
#             10 : 'Осень',
#             11 : 'Осень',
# }
# a = int(input("Введите месяц числом"))
# print("По словарю")
# print(my_dict.get(a))
# print("По Списку ")
# if a == 12:
#     print(my_list[0])
# elif a == 1:
#     print(my_list[0])
# elif a == 2:
#     print(my_list[0])
# elif a == 3:
#     print(my_list[1])
# elif a == 4:
#     print(my_list[1])
# elif a == 5:
#     print(my_list[1])
# elif a == 6:
#     print(my_list[2])
# elif a == 7:
#     print(my_list[2])
# elif a == 8:
#     print(my_list[2])
# elif a == 9:
#     print(my_list[3])
# elif a == 10:
#     print(my_list[3])
# elif a == 11:
#     print(my_list[3])
#4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
#Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
#Если в слово длинное, выводить только первые 10 букв в слове.
#a = list
# a = input('Vvedite slova cherez probel - ')
# b = a.split()
# d = len(b)
# c = 1  # нумерация строки
# m = 0  # индекс словоря
# f = 0
# while c <= d:
#     if len(b[m])>10:
#         print((c),(b[m][:10]))
#     else:
#         print((c),(b[m]))
#     c += 1
#     m += 1
# while c <= d:
#     print((c),(b[m]))
#     c += 1
#     m += 1



#5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент
# с тем же значением должен разместиться после них.
#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

# a = [7,5,3,3,2,6]
# b = input('vvedite chislo - ')
# print(b)
# a.append(int(b))
# a = sorted(a,  reverse= True)
# print(a)



#6. * Реализовать структуру данных «Товары».
#Она должна представлять собой список кортежей.
#Каждый кортеж хранит информацию об отдельном товаре.
#В кортеже должно быть два элемента — номер товара и словарь с параметрами
#(характеристиками товара: название, цена, количество, единица измерения).
#Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#Пример готовой структуры:
#[
#(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#]
#Необходимо собрать аналитику о товарах.
#Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
#а значение — список значений-характеристик, например список названий товаров.
#Пример:
#{
#“название”: [“компьютер”, “принтер”, “сканер”],
#“цена”: [20000, 6000, 2000],
#“количество”: [5, 2, 7],
#“ед”: [“шт.”]
#}
# goods = []
# features = {'nazvanie': '', 'cena': '', 'kolvo': '', 'edizm': ''}
# analitics = {'nazvanie': [], 'cena': [], 'kolvo': [], 'edizm': []}
# num = 0
# while True:
#     if input('Exit - Q, \nNext button').upper() ==  'Q':
#         break
#     num +=1
#     for f in features.keys():
#         user_data = input('{}:'.format(f))
#         features[f] = int(user_data) if (f == "cena" or f == 'kolvo') else user_data
#         analitics[f].append(features[f])
#     goods.append((num,features))
#     print('Tekyskaya analiteka po tovaram:\n')
#     for key, value in analitics.items():
#         print(key,value)